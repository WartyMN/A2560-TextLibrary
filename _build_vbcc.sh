#!/bin/zsh

export VBCC=/opt/vbcc
export PATH=$VBCC/bin:$PATH
export DEVA2560=~/dev/bbedit-workspace-a2560

cd $DEVA2560/lib_text

# copy latest version of headers to VBCC
cp lib_general.h $VBCC/targets/a2560-micah/include/mb/
cp lib_text.h $VBCC/targets/a2560-micah/include/mb/
cp a2560_platform.h $VBCC/targets/a2560-micah/include/mb/

# make general as static lib
vc +/opt/vbcc/config/a2560-4lib-micah -o a2560_general.lib lib_general.c
mv a2560_general.lib $VBCC/targets/a2560-micah/lib/

# make text as static lib
vc +/opt/vbcc/config/a2560-4lib-micah -o a2560_text.lib lib_text.c
mv a2560_text.lib $VBCC/targets/a2560-micah/lib/


# build test/demo code using the library

#vc +/opt/vbcc/config/a2560-s28 -o text.s28 main.c general.c general_a2560.c lib_text.c lib_text_test.c
#vc +/opt/vbcc/config/a2560-s28 -o text.s28 test3.c general.c general_a2560.c

#vc +/opt/vbcc/config/a2560-s28-micah -o text.s28 main.c general.c general_a2560.c lib_text.c lib_text_test.c
#vc +/opt/vbcc/config/a2560-s28-micah -o text.s28 main.c general.c general_a2560.c lib_text.c

#vc +/opt/vbcc/config/a2560-s28-micah -o text.s28 main.c lib_general.c lib_general_a2560.c lib_text.c lib_text_test.c -lm
vc +/opt/vbcc/config/a2560-s28-micahwlib -o text.s28 main.c lib_text_test.c -lm

# no tests
#vc +/opt/vbcc/config/aos68k -o build_vbcc/wb2k about_window.c app.c dict.c dict_entry.c file.c file_mover.c folder.c file_type.c file_type_db.c general.c general_amiga.c icon.c info_file.c info_panel.c label.c list.c list_panel.c menu.c mouse.c localize.c prefs.c status_window.c window.c -g -lauto -lamiga -prof -lmieee -stack-check

# with tests
#vc +/opt/vbcc/config/aos68k -o build_vbcc/wb2k about_window.c app.c dict.c dict_entry.c file.c file_mover.c folder.c file_type.c file_type_db.c general.c general_amiga.c icon.c info_file.c info_panel.c label.c list.c list_panel.c menu.c mouse.c localize.c prefs.c status_window.c window.c dict_test.c file_type_db_test.c icon_test.c prefs_test.c -g -lauto -lamiga -prof -lmieee -stack-check

# *************
# START OF PROCESSING TO MAKE AN F68-COMPATIBLE S28 FILE AND RUN IT

# s28 generated by vbcc is almost good enough, but the last line tells loader to run from 0x00000, instead of 0x020000. 
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$DEVA2560/lib_text/text.s28"

# cd $DEVA2560/f68-emulator-new/emulator/
# ./f68 $DEVA2560/lib_text/text.s28 go


# END OF PROCESSING TO MAKE AN F68-COMPATIBLE S28 FILE
# *************


# 
# # *************
# # START OF PROCESSING TO MAKE A MORFE-COMPATIBLE HEX FILE
# 
# # make binary with srec. eg
# /usr/local/Homebrew/bin/srec_cat text.s28 -Motorola -address-length=3 -o text.bin -binary
# 
# # delete s28, no longer need it
# rm text.s28
# 
# # convert binary to intel. eg
# #/usr/local/Homebrew/bin/srec_cat text.bin -binary -offset 0x20000 -o text.hex.wrong -intel
# /usr/local/Homebrew/bin/srec_cat text.bin -binary -o text.hex.wrong -intel
# 
# # delete binary, no longer need it
# rm text.bin
# 
# # process with perl
# perl -i -0777 -pe 's/\n/__EOF__/g' "$DEVA2560/lib_text/text.hex.wrong"
# perl -i -0777 -pe 's/^.+?(:02[0-9A-F]+__EOF__:200000004FF90005000041F9)/\1/g' "$DEVA2560/lib_text/text.hex.wrong"
# perl -i -0777 -pe 's/__EOF__/\n/g' "$DEVA2560/lib_text/text.hex.wrong"
# mv text.hex.wrong text.hex
# 
# # move hex to morfe folder for running with morfe
# mv text.hex ../morfe/
# 
# # blu's code to execute from user space (load hex stub_user.hex; set pc 50000; quit)
# vasmm68k_mot -Fsrec -o stub_user.srec $DEVA2560/m68k-misc/stub_user.asm
# /usr/local/Homebrew/bin/srec_cat stub_user.srec -o stub_user.hex -intel
# mv stub_user.hex ../morfe/
# 
# # END OF PROCESSING TO MAKE A MORFE-COMPATIBLE HEX FILE
# # *************
# 



echo "\n**************************\nVBCC build script complete\n**************************\n"
